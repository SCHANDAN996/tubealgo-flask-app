# render.yaml

services:
  # 1. Redis Service
  - name: redis
    type: pserv
    env: docker
    image: url: redis:7
    plan: free
    disk:
      name: redis-data
      mountPath: /data
      sizeGB: 1

  # 2. Web Service (Flask application served by Gunicorn)
  - type: web
    name: tubealgo
    env: python
    plan: free
    # Build command installs dependencies and creates DB tables
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
      python create_tables.py # Creates tables if they don't exist
    startCommand: "gunicorn -c gunicorn.conf.py run:app"
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: NODE_VERSION
        value: 20.10.0
      - key: SECRET_KEY
        generateValue: true
      - key: REDIS_URL
        fromService: { type: pserv, name: redis, property: url }
      - key: FLASK_APP
        value: "run.py"
      - key: FLASK_ENV
        value: "production"
      - key: DATABASE_URL
        fromDatabase: { name: tubealgo-database, property: connectionString }
      # --- Other secrets ---
      - key: YOUTUBE_API_KEYS
        sync: false
      - key: GOOGLE_CLIENT_ID
        sync: false
      - key: GOOGLE_CLIENT_SECRET
        sync: false
      - key: GEMINI_API_KEY
        sync: false
      - key: TELEGRAM_BOT_TOKEN
        sync: false
      - key: ADMIN_TELEGRAM_CHAT_ID
        sync: false
      - key: MEASUREMENT_ID
        sync: false
      - key: CASHFREE_APP_ID
        sync: false
      - key: CASHFREE_SECRET_KEY
        sync: false
      - key: CASHFREE_ENV
        value: "PROD"

  # 3. Celery Worker Service
  - type: worker
    name: celery-worker
    env: python
    plan: free
    buildCommand: "pip install -r requirements.txt"
    startCommand: "celery -A run:celery worker --loglevel=info"
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: REDIS_URL
        fromService: { type: pserv, name: redis, property: url }
      - key: DATABASE_URL
        fromDatabase: { name: tubealgo-database, property: connectionString }
      - key: FLASK_ENV
        value: "production"
      # --- secrets ---
      - key: YOUTUBE_API_KEYS
        sync: false
      - key: GEMINI_API_KEY
        sync: false
      - key: TELEGRAM_BOT_TOKEN
        sync: false
      - key: ADMIN_TELEGRAM_CHAT_ID
        sync: false

  # 4. Celery Beat Service
  - type: worker
    name: celery-beat
    env: python
    plan: free
    buildCommand: "pip install -r requirements.txt"
    startCommand: "celery -A run:celery beat --loglevel=info"
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: REDIS_URL
        fromService: { type: pserv, name: redis, property: url }
      - key: DATABASE_URL
        fromDatabase: { name: tubealgo-database, property: connectionString }
      - key: FLASK_ENV
        value: "production"
      # --- secrets ---
      - key: YOUTUBE_API_KEYS
        sync: false
      - key: GEMINI_API_KEY
        sync: false
      - key: TELEGRAM_BOT_TOKEN
        sync: false
      - key: ADMIN_TELEGRAM_CHAT_ID
        sync: false

databases:
  - name: tubealgo-database
    databaseName: tubealgodb
    user: tubealgouser
    plan: free
